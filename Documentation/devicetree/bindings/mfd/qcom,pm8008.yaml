# SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/mfd/qcom,pm8008.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Qualcomm Technologies, Inc. PM8008 PMIC

maintainers:
  - Guru Das Srinagesh <gurus@codeaurora.org>

description: |
  Qualcomm Technologies, Inc. PM8008 is a dedicated camera PMIC that integrates
  all the necessary power management, housekeeping, and interface support
  functions into a single IC.

properties:
  compatible:
    const: qcom,pm8008

  reg:
    description:
      I2C slave address.

    maxItems: 1

  interrupts:
    maxItems: 1

    description: Parent interrupt.

  "#interrupt-cells":
    const: 2

    description: |
      The first cell is the IRQ number, the second cell is the IRQ trigger
      flag. All interrupts are listed in include/dt-bindings/mfd/qcom-pm8008.h.

  interrupt-controller: true

  "#address-cells":
    const: 2

  "#size-cells":
    const: 0

  reset-gpios:
    maxItems: 1

  vdd_l1_l2-supply:
    description: Input supply phandle of ldo1 and ldo2 regulators.

  vdd_l3_l4-supply:
    description: Input supply phandle of ldo3 and ldo4 regulators.

  vdd_l5-supply:
    description: Input supply phandle of ldo5 regulator.

  vdd_l6-supply:
    description: Input supply phandle of ldo6 regulator.

  vdd_l7-supply:
    description: Input supply phandle of ldo7 regulator.

patternProperties:
  "^gpio@0,[0-9a-f]+$":
    type: object

    description: |
      The GPIO peripheral. This node may be specified twice, one for each GPIO.

    properties:
      compatible:
        items:
          - const: qcom,pm8008-gpio
          - const: qcom,spmi-gpio

      reg:
        description: Peripheral offset and address of one of the two GPIO peripherals.
        maxItems: 1

      gpio-controller: true

      gpio-ranges:
        maxItems: 1

      interrupt-controller: true

      "#interrupt-cells":
        const: 2

      "#gpio-cells":
        const: 2

    required:
      - compatible
      - reg
      - gpio-controller
      - interrupt-controller
      - "#gpio-cells"
      - gpio-ranges
      - "#interrupt-cells"

    additionalProperties: false

  "^ldo[1-7]@[1],[0-9a-f]+$":
    type: object

    $ref: "/schemas/regulator/regulator.yaml#"

    description: PM8008 regulator peripherals of PM8008 regulator device.

    properties:
      compatible:
        const: qcom,pm8008-regulator

      reg:
        description: Peripheral offset and address of the ldo regulator.
        maxItems: 1

    required:
      - compatible
      - reg

    unevaluatedProperties: false

required:
  - compatible
  - reg
  - interrupts
  - "#address-cells"
  - "#size-cells"
  - "#interrupt-cells"
  - reset-gpios

additionalProperties: false

examples:
  - |
    #include <dt-bindings/mfd/qcom-pm8008.h>
    #include <dt-bindings/interrupt-controller/irq.h>
    #include <dt-bindings/gpio/gpio.h>
    qupv3_se13_i2c {
      #address-cells = <1>;
      #size-cells = <0>;
      pm8008i@8 {
        compatible = "qcom,pm8008";
        reg = <0x8>;
        #address-cells = <2>;
        #size-cells = <0>;
        interrupt-controller;
        #interrupt-cells = <2>;

        interrupt-parent = <&tlmm>;
        interrupts = <32 IRQ_TYPE_EDGE_RISING>;

        reset-gpios = <&pm8350c_gpios 4 GPIO_ACTIVE_LOW>;

        vdd_l1_l2-supply = <&vreg_s8b_1p2>;
        vdd_l3_l4-supply = <&vreg_s1b_1p8>;
        vdd_l5-supply = <&vreg_bob>;
        vdd_l6-supply = <&vreg_bob>;
        vdd_l7-supply = <&vreg_bob>;

        pm8008_gpios: gpio@0,c000 {
          compatible = "qcom,pm8008-gpio", "qcom,spmi-gpio";
          reg = <0x0 0xc000>;
          gpio-controller;
          gpio-ranges = <&pm8008_gpios 0 0 2>;
          #gpio-cells = <2>;
          interrupt-controller;
          #interrupt-cells = <2>;
        };

        ldo1@1,4000 {
          compatible = "qcom,pm8008-regulator";
          reg = <0x1 0x4000>;
          regulator-name = "pm8008_ldo1";
          regulator-min-microvolt = <950000>;
          regulator-max-microvolt = <1300000>;
        };
      };
    };

...
